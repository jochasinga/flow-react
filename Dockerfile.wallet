# Install dependencies only when needed
FROM node:alpine AS deps

# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.
RUN apk add --no-cache libc6-compat
RUN apk add git
WORKDIR /app
COPY ./.env.local.wallet .env.local
# This is a workaround while the latest image from Flow's gcr.io is broken https://github.com/onflow/fcl-dev-wallet/issues/62
RUN git clone https://github.com/onflow/fcl-dev-wallet.git ./wallet
WORKDIR ./wallet
RUN npm install

# Rebuild the source code only when needed
FROM node:alpine AS builder

WORKDIR /app

COPY --from=deps /app/wallet .
COPY --from=deps /app/.env.local .

RUN npm run build && npm install --production --ignore-scripts

# Production image, copy all the files and run next
FROM node:alpine AS runners

WORKDIR /app

ENV NODE_ENV production

RUN addgroup -g 1001 -S nodejs
RUN adduser -S nextjs -u 1001

COPY --from=builder /app/public ./public
COPY --from=builder --chown=nextjs:nodejs /app/.next ./.next
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package.json ./package.json
COPY --from=builder /app/next.config.js ./next.config.js
COPY --from=builder /app/.env.local ./.env.local

USER nextjs

ENV NEXT_TELEMETRY_DISABLED 1
ENV PORT=8701

EXPOSE 8701

CMD ["npm", "run", "start"]
